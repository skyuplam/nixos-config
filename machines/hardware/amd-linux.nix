# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd = {
      availableKernelModules = ["nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" "sr_mod"];
      kernelModules = ["kvm-amd"];
      luks = {
        gpgSupport = true;
        devices."root" = {
          device = "/dev/disk/by-uuid/23301f4c-fc32-427e-9781-913f317f3135";
          allowDiscards = true;
          preLVM = true;

          gpgCard = {
            encryptedPass = /crypt/crypt_key.luks.gpg;
            publicKey = /crypt/pubkey.asc;
          };
        };
      };
    };
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/977f983a-5baf-492c-b6fa-8db98aeae7ee";
      fsType = "btrfs";
      options = ["subvol=@"];
    };

    "/crypt" = {
      device = "/dev/disk/by-uuid/9eceabb7-e42e-46d4-bdc0-1a0c490adbeb";
      fsType = "ext4";
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/77B1-0150";
      fsType = "vfat";
      options = ["uid=0" "gid=0" "fmask=0077" "dmask=0077"];
    };

    "/home" = {
      device = "/dev/disk/by-uuid/977f983a-5baf-492c-b6fa-8db98aeae7ee";
      fsType = "btrfs";
      options = ["subvol=@home"];
    };

    "/.snapshots" = {
      device = "/dev/disk/by-uuid/977f983a-5baf-492c-b6fa-8db98aeae7ee";
      fsType = "btrfs";
      options = ["subvol=@snapshots"];
    };

    "/var" = {
      device = "/dev/disk/by-uuid/977f983a-5baf-492c-b6fa-8db98aeae7ee";
      fsType = "btrfs";
      options = ["subvol=@var"];
    };

    "/var/log" = {
      device = "/dev/disk/by-uuid/977f983a-5baf-492c-b6fa-8db98aeae7ee";
      fsType = "btrfs";
      options = ["subvol=@var_log"];
    };

    "/nix" = {
      device = "/dev/disk/by-uuid/977f983a-5baf-492c-b6fa-8db98aeae7ee";
      fsType = "btrfs";
      options = ["subvol=@nix"];
    };

    "/swap" = {
      device = "/dev/disk/by-uuid/977f983a-5baf-492c-b6fa-8db98aeae7ee";
      fsType = "btrfs";
      options = ["subvol=@swap"];
    };
  };

  services = {
    btrfs = {
      autoScrub = {
        enable = true;
        interval = "weekly";
        fileSystems = ["/"];
      };
    };
  };

  swapDevices = [{device = "/swap/swapfile";}];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  networking.interfaces.enp38s0.useDHCP = lib.mkDefault true;
  networking.interfaces.enp39s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
